!% -SD
!%
Constant Story "La voix - LCO603";
Constant Headline "^Par Antoine Sweeney^";
Constant MANUAL_PRONOUNS;

Include "Parser";  ! L'analyseur de texte

Object LibraryMessages
  with before  [;
    Miscellany:
      if (lm_n == 9) "^Vous vous sentez compl@`etement seul.";
      ];

Include "VerbLib"; ! Les verbes

Global memory_visited = 0; 

Global mandatory_scenes = 0; ! Il faut que le joueur ait dormi, parlé à sa mère dans la cuisine et visité le momry lane jusqu'au bout
Global sleep = 0;
Global conversation = 0;
Global final_memory = 0;
Global alert_ending = 0;
Global stride_count = 0;
Global alert_memory = 0;
!Global player_bad = 0;
Global hallucination = 0;

!------------------------------------------------------------------------------!
! Routine d'initialisation
[ Initialise;
    location = chambre;
    lookmode = 2;
    player.description = "Vous etes une etudiante";
    "^Ceci n'est pas un jeu. Et il n'y a pas grand chose a voir non plus.";
];

!------------------------------------------------------------------------------!
! Définition des classes

Class Room
  with each_turn [;
    Stridescount();
    if (hallucination == true) {
      print "Votre mere vous regarde depuis le fauteil."; }
    ],
    before [;
    go:
     if (mandatory_scenes == 2 && stride_count == 12 && player notin salle_a_manger && player notin sous_sol && noun ~= e_obj) {
      SceneMotherTalk();
      return true; }
  ],
  has light;

Class Furniture
  has static supporter scenery;

Class Memory
  with s_to chambre,
  cant_go "Les murs du souvenir sont cotonneux.",
  has light; !ôter la lumière et faire en sorte que le joueur doit trouver un objet lumineux.

!------------------------------------------------------------------------------!
! Définitions des lieux

Room chambre
  with description "Une chambre",
  before [;

    if (noun == bed) <<sleep>>;

    sleep: if (sleep == false) { 
     sleep = true;
     hallucination = true;
     mandatory_scenes = mandatory_scenes + 1;
     print "scene nocturne mere partout";
     return true; }
  go: if (player in chambre && hallucination == true) {
  if (noun == n_obj) print_ret "Caroline ne peut s'enfuir dans ses souvenirs.";
  if (noun == s_obj) print_ret "Caroline ne peut pas s'enfuir au travail";
  if (noun == w_obj) print_ret "Caroline ne peut pas s'enfuir a l'ecole.";
}
  ],
  !d_to blackbox, pour le test à la fin 
  n_to memory_lane,
  s_to magasin,
  w_to salle_etude,
  e_to salle_a_manger;

Room salle_etude
  with description "salle etude",
  e_to chambre,
  n_to salle_conferance,
  cant_go "mur invisible";

Room salle_conferance
  with description "Salle de conferance",
  s_to salle_etude;

Room magasin
  with description "le magasin",
  d_to salle_pause,
  n_to chambre,
  cant_go "Elle ne peut pas s'enfuir du travail";

Room salle_pause
  with description "une salle de pause",
  u_to magasin,
  cant_go "Il n'y a pas d'issue";

Room salle_a_manger
  with description "la salle a manger",
  before [;
    go: if (noun == d_obj) {
    hallucination = false;
    print "fin de l'hallucination^^";
    return false; }
  ],
  w_to chambre,
  n_to salon,
  d_to sous_sol,
  cant_go "Elle n'a pas tres envie de se promener, sinon pour retourner dans sa chambre.";

Room salon "salon"
  with description "salon",
  s_to salle_a_manger,
  cant_go "La salle a manger est au sud.";

Room sous_sol
  with description "sous-sol",
  u_to salle_a_manger,
  cant_go "En haut se trouve la salle a manger";


Room memory_lane
  with description "le ruban du passe",
  before [;
  go: 
    if (noun == n_obj && memory_visited ~= 0)
      switch (memory_visited) {
        2: PlayerTo (souvenir2);
        return true;
        31: PlayerTo (souvenir3a);
        return true;
        32: PlayerTo (souvenir3b);
        return true; 
        41: PlayerTo (souvenir4a);
        return true; 
        42: PlayerTo (souvenir4b);
        return true; 
        51: PlayerTo (souvenir5a);
        return true; 
        52: PlayerTo (souvenir5b);
        return true; 
        53: PlayerTo (souvenir5c);
        return true; 
        54: PlayerTo (souvenir5d);
        return true; 
        55: PlayerTo (souvenir5e);
        return true; 
        61: PlayerTo (souvenir6a);
        return true; 
        62: PlayerTo (souvenir6b);
        return true; 
        63: PlayerTo (souvenir6c);
        return true; 
        default: return false; }
  ],
  s_to chambre,
  n_to souvenir1;

!Object blackbox ""
!  with
!  description "",
!  turns_move 0,
!  turns_wait 0,
!  encounterinsects 0,
!  encounterdog 0,
!  encounterghost 0,
!  encounterform 0,
!
!  before [;
!
!    touch, take, attack:
!
!    if (noun == form || noun == dog || noun == ghost || noun == insects) <<talk noun>>;
!
!    smell: 
!
!      print_ret "Vous ne sentez que votre propre sueur. C'est horrible.";
!
!    listen:
!
!      print_ret "Vous entendez de l'eau clapoter au loin.";
!
!    look: 
!
!      if (blackbox hasnt light)
!      print_ret "Tout ce que vous voyez semble compos@'e d'ombres fuyantes.";
!
!    go:
!
!    if (self.turns_move == 20) deadflag = 3;
!      self.turns_move = self.turns_move + 1;
!    if (player_bad == true) {
!        print "Tout en tra@^inant du pied, vous poussez un r@^ale de douleur.^^";}
!
!      switch (random (20)) {
!
!      1: print_ret "vous apercevez une lumiere lointaine @`a l'est. Puis elle s'@'eteint.";
!      2: print_ret "Vous entendez un bref cri @`a l'ouest.";
!      3: if (self.encounterghost == false) {Thingslight(ghost); self.encounterghost = true; print_ret "Un spectre appara@^it.";} return false;
!      4: if (self.encounterform == false) {Thingslight(form); self.encounterform = true; print_ret "Vous heurtez une forme indistincte.";} return false;
!      5: print_ret "Vous ressentez une douleur, votre poitrine est opprim@'ee.";
!      6: if (self.encounterdog == false) {Thingslight(dog); self.encounterdog = true; print_ret "Vous entendez un hal@`etement.";} return false;
!      7: print_ret "Vous vous demandez vraiment ce que vous faites ici.";
!      8: if (self.encounterinsects == false) {Thingslight(insects); self.encounterinsects = true; print_ret "Des insectes se faufilent dans vos pantalons, ils sont nombreux et de petite taille.";} return false;
!      9: player_bad = true; print_ret "Pris d'un malaise, vous tombez au sol. Vous vous relevez difficilement.";
!      10 to 12: print_ret "vous faites quelques pas dans cette direction";
!      13 to 14: print_ret "Vous allez par l@`a, mais sans grande conviction.";
!      15: print_ret "Vraiment? Bon, ok. Vous allez par l@`a. Qu'y a-t-il d'autre @`a faire de toute mani@`ere que de se promener dans le noir? N'est-ce donc pas divertissant?";
!      default: return false;
!    }
!
!  wait: 
!
!    if (self.turns_wait == 6)
!      print_ret "Vous ne voulez plus attendre d@'esormais.";
!
!    self.turns_wait = self.turns_wait + 1;
!    switch (self.turns_wait) {
!
!      2: print_ret "Vous vous impatientez.";
!      4: print_ret "Vous avez plut@^ot envie d'explorer.";
!      6: print_ret "Comme vous avez vraiment envie d'explorer, vous faites le choix judicieux d'aller au nord.^^Vous marchez quelques pas au nord.";
!    }
!    
!  ], 
!  n_to "Vous marchez quelques pas au nord",
!  s_to "vous vous dirigez au sud",
!  e_to "Vous vous d@'eplacez a l'est",
!  w_to "Vous allez @`a l'ouest",
!  has ~light;

Room hangar;

!--------------------Furniture---------------------------------------!

Furniture table "table" salle_a_manger
  with  name 'table',
  description "Une belle table",
  has female; 

Furniture bed "lit" chambre
  with name 'lit',
  article 'le',
  description "le lit.",
  has container open enterable male;

!--------------------------------------------------------------------!


!--------------------Memory lane---------------------------------------!

Memory souvenir1
  with description "souvenir initial",
  before [;
  go: if (noun == n_obj) {
    memory_visited = 2;
    return false;
  }
  ],
  n_to souvenir2;

Memory souvenir2
  with description "souvenir a la foire, a gauche souvenir a la piscine, droite souvenir avec un ballon.",
  before [;
  go:
  if (noun == w_obj) {
    memory_visited = 31;
    return false;
  }
  if (noun == e_obj) {
    memory_visited = 32;
    return false;
  }
  ],
  w_to souvenir3a,
  e_to souvenir3b;

Memory souvenir3a
  with description "souvenir a la piscine",
  before [;
  go: 
  if (noun == n_obj) {
    memory_visited = 41;
    return false; 
  } 
  ],
  n_to souvenir4a;

Memory souvenir3b
  with description "souvenir avec le ballon",
  before [;
  go: 
  if (noun == n_obj) {
    memory_visited = 42;
    return false; 
  } 
  ],
  n_to souvenir4b;

Memory souvenir4a
  with description "souvenir dans la voiture, a gauche souvnir de camping, au nord souvenir de fete.",
  before [;
  go:
  if (noun == w_obj) {
    memory_visited = 51;
    return false;
  }
  if (noun == e_obj) {
    memory_visited = 55;
    return false;
  }
  if (noun == n_obj) {
    memory_visited = 52;
    return false;
  }
  ],
  w_to souvenir5a,
  e_to souvenir5e,
  n_to souvenir5b;

Memory souvenir4b
  with description "souvenir dans le sous-sol, a droite souvenir avec un instrument, au nord souvenir dans une foret.",
  before [;
  go:
  if (noun == w_obj) {
    memory_visited = 55;
    return false;
  }
  if (noun == e_obj) {
    memory_visited = 54;
    return false;
  }
  if (noun == n_obj) {
    memory_visited = 53;
    return false;
  }
  ],
  e_to souvenir5d,
  w_to souvenir5e,
  n_to souvenir5c;

Memory souvenir5a
  with description "souvenir au camping",
  before [;
  go: if (noun == n_obj) {
    memory_visited = 61;
    final_memory = true;
    mandatory_scenes = mandatory_scenes + 1;
    return false;
  }
  ],
  n_to souvenir6a; 

Memory souvenir5b
  with description "souvenir a la fete",
  before [;
  go: if (noun == n_obj) {
    memory_visited = 61;
    final_memory = true;
    mandatory_scenes = mandatory_scenes + 1;
    return false;
  }
  ],
  n_to souvenir6a; 

Memory souvenir5c
  with description "souvenir dans une foret",
  before [;
  go: if (noun == n_obj) {
    memory_visited = 62;
    final_memory = true;
    mandatory_scenes = mandatory_scenes + 1;
    return false;
  }
  ],
  n_to souvenir6b;

Memory souvenir5d
  with description "souvenir avec un instrument",
  before [;
  go: if (noun == n_obj) {
    memory_visited = 62;
    final_memory = true;
    mandatory_scenes = mandatory_scenes + 1;
    return false;
  }
  ],
  n_to souvenir6b;

Memory souvenir5e
  with description "souvenir fete a la fete foraine",
  before [;
  go: if (noun == n_obj) {
    memory_visited = 63;
    final_memory = true;
    mandatory_scenes = mandatory_scenes + 1;
    return false;
  }
  ],
  n_to souvenir6c;

Memory souvenir6a
  with description "souvenir final 1";

Memory souvenir6b
  with description "souvenir final 2";

Memory souvenir6c
  with description "souvenir final 1";


!--------------------objets----------------------------------------------!




!---------------------Routines---------------------------------------------!

[ DeathMessage; print "C'est termin@'e, vous avez @'epuis@'e ce qu'il y avait @`a faire. Vous tournez en rond dans une bo@^ite noire comme une fourmi dans un bocal. Allez prendre une marche, comme dans votre quartier par exemple, ce sera plus int@'eressant il me semble."; ];

[SceneMotherTalk;
  mandatory_scenes = mandatory_scenes +1;
  conversation = true;
  PlayerTo(salle_a_manger, 1);
  print "convo avec la mere";
  if (YesOrNo()) {
    Convoa();}
    else {Convob();}
  return true;

];

[Stridescount;

if (hallucination == 0) {

  if (stride_count < 12) {
    stride_count = stride_count + 1; }

  if (stride_count > 11 && alert_ending == 0 && mandatory_scenes == 3) {
    stride_count = stride_count + 1; }

  if (stride_count >= 15 && alert_ending == 0 && mandatory_scenes == 3) {

    print "Il est temps d'aller prendre la parole pour la conference sur la sante mentale.";
    alert_ending = true;
    return false; }

  if (stride_count >= 6 && sleep ~= true) {
    switch (random(3)) {
    1: print "Caroline a sommeil et epuise, voudrait prendre une sieste.";
    return false; 
    default: return false; } }

  if (stride_count == 12 && sleep == true && alert_memory == false && final_memory == false && player notin chambre && player notin memory_lane) {
    alert_memory = true;
    print "^Caroline se sent nostalgique.";
    return false; }

  }
];

!----------convo---------------------------------------------------------------!

[Convoa;
print "conversation, partie A";
if (YesOrNo()) {
Convoc();}
else {Convod();}
];

[Convob;
print "conversation, partie B";
if (YesOrNo()) {
Convoe();}
else {Convof();}
];

[Convoc;
print "conversation, partie C";
convog();
];

[Convod;
print "conversation, partie D";
convog();
];

[Convoe;
print "conversation, partie E";
convoh();
];

[Convof;
print "conversation, partie F";
convoh();
];

[Convog;
print "conversation, partie G";
convoi();
];

[Convoh;
print "conversation, partie H";
convoi();
];

[Convoi;
print "conversation, partie I, finale";
return true;
];



!------------------------------------------------------------------------------!
! Fichier de la grammaire française
Include "FrenchG";

!------------------------------------------------------------------------------!
[ReadSub;
 "Lire quel livre?";
 ];

[ TalkSub;
 if (noun == player) print_ret "Rien d'inattendu.";
 if (RunLife(noun,##Talk) ~=false) return; !consult life[; Talk: ]
 print_ret "@`A ce moment, vous ne savez que dire.";
 ];

Extend 'lire' first
*                    -> Read
* noun               -> Read;

Verb 'flatter'
* noun               -> Touch;

Extend 'dormir' 
* 'dans' noun  -> Sleep;